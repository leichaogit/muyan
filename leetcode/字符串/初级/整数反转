整数反转

给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。

**示例 1:**

```
输入: 123
输出: 321
```

 **示例 2:**

```
输入: -123
输出: -321
```

**示例 3:**

```
输入: 120
输出: 21
```

**注意:**

假设我们的环境只能存储得下 32 位的有符号整数，则其数值范围为 [−231,  231 − 1]。请根据这个假设，如果反转后整数溢出那么就返回 0。

```python
class Solution:
    def reverse(self, x: int) -> int:
        if -10 < x and x < 10:
            return x
        if x > 0:
            ts = str(x)
            ts = ts[::-1] #反转字符串
            for i in range(len(ts)): # 找到第一个不为0的字符
                if ts[i] != '0':
                    ts = ts[i:] #取第一个不为0后面的所有字符
                    num = int(ts)
                    if num > (2**31 -1):
                        return 0
                    return num
        if x < 0:
            ts = str(x)
            ts = ts[1:] # 先将负号去掉
            ts = ts[::-1] #反转字符串
            for i in range(len(ts)): # 找到第一个不为0的字符
                if ts[i] != '0':
                    ts = ts[i:] #取第一个不为0后面的所有字符
                    num = int(ts)
                    if num > (2**31):
                        return 0
                    return -num

```

